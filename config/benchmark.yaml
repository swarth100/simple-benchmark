reference_module: "benchmarks.reference"

user_modules:
  - "benchmarks.team01"
  - "benchmarks.team02"
  - "benchmarks.team03"

benchmarks:
  - function_name: "square"
    max_time: 100
    hidden: true
    args:
      - name: "size"
        increment: "lambda x: x + 1"
        default: "int(1)"

  - function_name: "triangle"
    max_time: 100
    hidden: true
    args:
      - name: "size"
        increment: "lambda x: x + 1"
        default: "int(1)"

  - function_name: "rhombus"
    max_time: 100
    hidden: true
    args:
      - name: "size"
        increment: "lambda x: x + 1"
        default: "int(1)"

  - function_name: "running_sum"
    max_time: 50
    hidden: false
    args:
      - name: "size"
        increment: "lambda x: x + 1"
        default: "int(4)"
        hidden: true
      - name: "nums"
        increment: "lambda **kwargs: [random.randint(0, 100) for _ in range(kwargs['size'])]"
        default: "list([2,5,3,1])"

  - function_name: "histogram"
    max_time: 50
    hidden: false
    args:
      - name: "size"
        increment: "lambda x: x + 1"
        default: "int(3)"
        hidden: true
      - name: "nums"
        increment: "lambda **kwargs: [random.randint(0, 10) for _ in range(kwargs['size'])]"
        default: "list([4,1,2])"

  - function_name: "scatter"
    max_time: 50
    hidden: false
    args:
      - name: "x"
        increment: "lambda x: x + 1"
        default: "int(16)"
        hidden: true
      - name: "size"
        increment: "lambda **kwargs: int(kwargs['x'] ** 0.5)"
        default: "int(4)"
      - name: "nums"
        increment: "lambda **kwargs: [[random.randint(1, kwargs['size']), random.randint(1, kwargs['size'])] for _ in range(kwargs['size'] + 1)]"
        default: "list([[2,2],[1,3],[4,1]])"

  - function_name: "count_pairs"
    max_time: 100
    hidden: true
    args:
      - name: "size"
        increment: "lambda x: x + 1"
        default: "int(4)"
        hidden: true
      - name: "nums"
        increment: "lambda **kwargs: [random.randint(0, kwargs['size'] // 2) for _ in range(kwargs['size'])]"
        default: "list([1,2,2,1])"
      - name: "k"
        increment: "lambda **kwargs: random.randint(1, kwargs['size'] // 2)"
        default: "int(1)"

  - function_name: "dividing_numbers"
    max_time: 50
    hidden: true
    args:
      - name: "size"
        increment: "lambda x: x + 1"
        default: "int(10)"
        hidden: true
      - name: "left"
        increment: "lambda **kwargs: random.randint(0, kwargs['size'] // 2)"
        default: "int(0)"
      - name: "right"
        increment: "lambda **kwargs: random.randint(kwargs['size'] // 2, kwargs['size'])"
        default: "int(10)"

